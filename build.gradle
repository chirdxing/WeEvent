<<<<<<< HEAD
println("Notice: current gradle version is " + gradle.gradleVersion + ", WeEvent support gradle version in [4.10, 5.0)")

ext {
    // ----- org.springframework -----
    // spring boot
    springBoot2Version = "2.1.0.RELEASE"
    // spring
    spring5Version = "5.1.0.RELEASE"
    // data.spring-data-commons
    springDataCommonsVersion = "2.1.0.RELEASE"

    // ----- org.apache -----
    // zookeeper
    zookeeperVersion = "3.5.5"
    // curator.recipes
    curatorVersion = "4.2.0"
    // httpclient
    httpclientVersion = "4.5.6"
    // tomcat
    tomcatVersion = "8.5.23"
    // commons
    apacheCommonsVersion = [
            lang3       : "3.6",
            jexl3       : "3.1",
            pool2       : "2.7.0",
            collections4: "4.1",
            dbcp2       : "2.6.0",
            commonsIo   : "2.4"
    ]
    // logging.log4j
    log4jVersion = "2.11.1"
    // jmeter
    jmeterVersion = "5.0"

    // org.fisco-bcos.web3sdk
    web3sdkVersion = [
            fiscoV1: "1.2.5",
            fiscoV2: "2.2.0.120500-SNAPSHOT"
    ]
    // fabric
    fabricVersion = "1.4.4"
    // org slf4j
    slf4jVersion = "1.7.26"
    // lombok
    lombokVersion = "1.16.14"
    // junit
    junitVersion = "4.12"
    // netty-all
    nettyVersion = "4.1.15.Final"
    // jsonrpc
    jsonrpc4jVersion = "1.5.3"
    // JMS
    jmsVersion = "1.1"
    // Jmock
    jmockVersion = "1.9"
    // mybatis-spring-boot-starter
    mybatisVersion = "1.3.2"
    //h2
    h2Version = "1.4.196"
    // mariadb-java-client
    mariadbClientVersion = "2.3.0"
    // jsoup
    jsoupVersion = "1.9.2"
    // fastjson
    fastjsonVersion = "1.2.60"
    // quartz
    quartzVersion = "2.3.0"
    // Java-WebSocket
    WebSocketVersion = "1.4.0"
}

buildscript {
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
=======
group = "com.webank.weevent"
version = "0.9.0"

apply plugin: "java"
apply plugin: "maven"
apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
springBoot {
    buildInfo()
}
buildscript {
    repositories {
        maven {
            url "http://maven.weoa.com/nexus/content/groups/public/"
>>>>>>> init WeEvent
        }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE")
<<<<<<< HEAD
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.1.0")
    }
}

List lombok = [
        "org.projectlombok:lombok:${lombokVersion}"
]

allprojects {
    group "com.webank.weevent"
    version "1.1.0"

    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "idea"
    apply plugin: "eclipse"
    apply plugin: "jacoco"

    // jdk version
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava {
        options.compilerArgs << "-Xlint:unchecked"
    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        // "org.ethereum.solcJ-all-0.4.25"
        // maven { url "https://dl.bintray.com/ethereum/maven/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        mavenLocal()
        mavenCentral()
    }

    // encoding type
    [compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

    sourceSets {
        main {
            java {
                srcDirs = ["src/main/java"]
            }
            resources {
                srcDirs = ["src/main/resources"]
            }
        }
        test {
            java {
                srcDirs = ["src/test/java"]
            }
            resources {
                srcDirs = ["src/test/resources"]
            }
        }
    }

    clean.doLast {
        file("dist/apps/").deleteDir()
        file("dist/conf/").deleteDir()
        file("dist/lib/").deleteDir()
    }

    configurations.all {
        // exclude spring-boot's default logger logback
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"

        resolutionStrategy {
            // fix security bug
            force "com.alibaba:fastjson:${fastjsonVersion}"
            // force use netty 4.1
            force "io.netty:netty-all:${nettyVersion}"
        }
    }

    // all project common lib
    dependencies {
        compileOnly(lombok)
        annotationProcessor(lombok)

        // apache commons
        implementation("org.apache.commons:commons-lang3:${apacheCommonsVersion.lang3}")
        implementation("org.apache.commons:commons-collections4:${apacheCommonsVersion.collections4}")

        // slf4j logger
        implementation("org.slf4j:slf4j-api:${slf4jVersion}")

        // junit test
        testImplementation("junit:junit:${junitVersion}")
        testCompileOnly(lombok)
        testAnnotationProcessor(lombok)
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
=======
    }
}

allprojects {
    repositories {
        maven {
            //url "http://maven.aliyun.com/nexus/content/groups/public/"
            url "http://maven.weoa.com/nexus/content/groups/public/"
        }
        mavenLocal()
        mavenCentral()
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"
compileJava {
    options.compilerArgs << "-parameters"
}

List lombok = [
        "org.projectlombok:lombok:1.16.14"
]

configurations {
    //exclude spring-boot's default logger logback
    all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
}

//web3sdk contains logger handler org.slf4j:slf4j-log4j12:1.7.25
List logger = [
        "org.apache.logging.log4j:log4j-api:2.11.2",
        "org.apache.logging.log4j:log4j-core:2.11.2",
        "org.apache.logging.log4j:log4j-web:2.11.2",
        "org.slf4j:slf4j-api:1.7.26",
        "org.apache.logging.log4j:log4j-slf4j-impl:2.11.2"
]

List apache_commons = [
        "org.apache.commons:commons-collections4:4.1",
        "org.apache.commons:commons-lang3:3.5",
]

List jsonrpc4j = [
        //https://mvnrepository.com/artifact/com.github.briandilley.jsonrpc4j/jsonrpc4j
        "com.github.briandilley.jsonrpc4j:jsonrpc4j:1.5.3"
]

//http://curator.apache.org/
List zookeeper = [
        "org.apache.zookeeper:zookeeper:3.4.12",
        "org.apache.curator:curator-recipes:4.2.0"
]

List redis = [
        "redis.clients:jedis:3.0.0"
]

List client_depends = [
        "javax.jms:jms:1.1",
        "org.java-websocket:Java-WebSocket:1.4.0",
        "org.springframework:spring-messaging"
]

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-websocket")
    implementation("org.springframework.integration:spring-integration-mqtt")

    implementation(lombok, logger, apache_commons)
    implementation(jsonrpc4j)
    implementation("org.bcos.channel:web3sdk:1.2.5")

    // redis
    implementation(redis)

    // ha
    implementation(zookeeper)

    implementation(client_depends)

    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
    test {
        java {
            srcDirs = ["src/test/java"]
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
    }
}

bootJar {
    destinationDir file('dist/apps')
    archiveName project.name + '-' + version + '.jar'
    exclude '**/*.xml'
    exclude '**/*.properties'

    copy {
        from file('src/main/resources/')
        into 'dist/conf'
    }
    copy {
        from configurations.runtime
        into 'dist/lib'
    }
    copy {
        from file('.').listFiles().findAll { File f -> (f.name.endsWith('.bat') || f.name.endsWith('.sh') || f.name.endsWith('.env')) }
        into 'dist'
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'http://maven.weoa.com/nexus/content/repositories/releases/') {
                authentication(userName: 'deployment', password: 'deployment123')
            }
            pom.groupId = 'com.webank.weeventbroker.test'
            pom.version = 'v1.0'
            pom.artifactId = 'weevent-broker'
        }
    }
}
>>>>>>> init WeEvent
